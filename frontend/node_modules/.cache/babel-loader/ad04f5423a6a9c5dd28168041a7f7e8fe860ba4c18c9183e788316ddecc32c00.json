{"ast":null,"code":"import axios from \"axios\";\nimport createAuthRefreshInterceptor from \"axios-auth-refresh\";\nimport { getAccessToken, getRefreshToken, getUser } from \"../hooks/user.actions\";\n\n//request interceptior\nconst axiosService = axios.create({\n  baseURL: \"http://localhost:8000\",\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\n\n//get access token from local storage, and add to header of request\naxiosService.interceptors.request.use(async config => {\n  const {\n    access\n  } = JSON.parse(localStorage.getItem(\"auth\"));\n  config.headers.Authorization = `Bearer ${access}`;\n  return config;\n});\n\n//return resolved or rejected promise\naxiosService.interceptors.response.use(res => Promise.resolve(res), err => Promise.reject(err));\n\n//refresh function for failedrequest\nconst refreshAuthLogic = async failedRequest => {\n  return axios.post(\"/auth/refresh/\", {\n    refresh: getRefreshToken()\n  }, {\n    baseURL: process.env.REACT_APP_API_URL\n  }).then(resp => {\n    const {\n      access\n    } = resp.data;\n    failedRequest.response.config.headers[\"Authorization\"] = \"Bearer \" + access;\n    localStorage.setItem(\"auth\", JSON.stringify({\n      access,\n      refresh: getRefreshToken(),\n      user: getUser()\n    }));\n  }).catch(() => {\n    localStorage.removeItem(\"auth\");\n  });\n};\ncreateAuthRefreshInterceptor(axiosService, refreshAuthLogic);\nexport function fetcher(url) {\n  return axiosService.get(url).then(res => res.data);\n}\nexport default axiosService;","map":{"version":3,"names":["axios","createAuthRefreshInterceptor","getAccessToken","getRefreshToken","getUser","axiosService","create","baseURL","headers","interceptors","request","use","config","access","JSON","parse","localStorage","getItem","Authorization","response","res","Promise","resolve","err","reject","refreshAuthLogic","failedRequest","post","refresh","process","env","REACT_APP_API_URL","then","resp","data","setItem","stringify","user","catch","removeItem","fetcher","url","get"],"sources":["C:/Users/cfarb/scheduler/frontend/src/helpers/axios.js"],"sourcesContent":["import axios from \"axios\";\r\nimport createAuthRefreshInterceptor from \"axios-auth-refresh\";\r\nimport {\r\n    getAccessToken,\r\n    getRefreshToken,\r\n    getUser,\r\n  } from \"../hooks/user.actions\";\r\n\r\n\r\n//request interceptior\r\nconst axiosService = axios.create({\r\n    baseURL: \"http://localhost:8000\",\r\n    headers: {\r\n        \"Content-Type\": \"application/json\",\r\n    },\r\n});\r\n\r\n//get access token from local storage, and add to header of request\r\naxiosService.interceptors.request.use(async (config) => {\r\n    const {access} = JSON.parse(localStorage.getItem(\"auth\"));\r\n    config.headers.Authorization = `Bearer ${access}`;\r\n    return config;\r\n});\r\n\r\n//return resolved or rejected promise\r\naxiosService.interceptors.response.use(\r\n    (res) => Promise.resolve(res),\r\n    (err) => Promise.reject(err),\r\n);\r\n\r\n//refresh function for failedrequest\r\nconst refreshAuthLogic = async (failedRequest) => {\r\n    return axios\r\n      .post(\r\n        \"/auth/refresh/\",\r\n        {\r\n          refresh: getRefreshToken(),\r\n        },\r\n        {\r\n          baseURL: process.env.REACT_APP_API_URL,\r\n        }\r\n      )\r\n      .then((resp) => {\r\n        const { access } = resp.data;\r\n        failedRequest.response.config.headers[\"Authorization\"] =\r\n          \"Bearer \" + access;\r\n        localStorage.setItem(\r\n          \"auth\",\r\n          JSON.stringify({ access, refresh: getRefreshToken(), user: getUser() })\r\n        );\r\n      })\r\n      .catch(() => {\r\n        localStorage.removeItem(\"auth\");\r\n      });\r\n  };\r\ncreateAuthRefreshInterceptor(axiosService,refreshAuthLogic);\r\nexport function fetcher(url) {\r\n    return axiosService.get(url).then((res) => res.data);\r\n}\r\n\r\nexport default axiosService;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,4BAA4B,MAAM,oBAAoB;AAC7D,SACIC,cAAc,EACdC,eAAe,EACfC,OAAO,QACF,uBAAuB;;AAGhC;AACA,MAAMC,YAAY,GAAGL,KAAK,CAACM,MAAM,CAAC;EAC9BC,OAAO,EAAE,uBAAuB;EAChCC,OAAO,EAAE;IACL,cAAc,EAAE;EACpB;AACJ,CAAC,CAAC;;AAEF;AACAH,YAAY,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAC,MAAOC,MAAM,IAAK;EACpD,MAAM;IAACC;EAAM,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;EACzDL,MAAM,CAACJ,OAAO,CAACU,aAAa,GAAI,UAASL,MAAO,EAAC;EACjD,OAAOD,MAAM;AACjB,CAAC,CAAC;;AAEF;AACAP,YAAY,CAACI,YAAY,CAACU,QAAQ,CAACR,GAAG,CACjCS,GAAG,IAAKC,OAAO,CAACC,OAAO,CAACF,GAAG,CAAC,EAC5BG,GAAG,IAAKF,OAAO,CAACG,MAAM,CAACD,GAAG,CAC/B,CAAC;;AAED;AACA,MAAME,gBAAgB,GAAG,MAAOC,aAAa,IAAK;EAC9C,OAAO1B,KAAK,CACT2B,IAAI,CACH,gBAAgB,EAChB;IACEC,OAAO,EAAEzB,eAAe,CAAC;EAC3B,CAAC,EACD;IACEI,OAAO,EAAEsB,OAAO,CAACC,GAAG,CAACC;EACvB,CACF,CAAC,CACAC,IAAI,CAAEC,IAAI,IAAK;IACd,MAAM;MAAEpB;IAAO,CAAC,GAAGoB,IAAI,CAACC,IAAI;IAC5BR,aAAa,CAACP,QAAQ,CAACP,MAAM,CAACJ,OAAO,CAAC,eAAe,CAAC,GACpD,SAAS,GAAGK,MAAM;IACpBG,YAAY,CAACmB,OAAO,CAClB,MAAM,EACNrB,IAAI,CAACsB,SAAS,CAAC;MAAEvB,MAAM;MAAEe,OAAO,EAAEzB,eAAe,CAAC,CAAC;MAAEkC,IAAI,EAAEjC,OAAO,CAAC;IAAE,CAAC,CACxE,CAAC;EACH,CAAC,CAAC,CACDkC,KAAK,CAAC,MAAM;IACXtB,YAAY,CAACuB,UAAU,CAAC,MAAM,CAAC;EACjC,CAAC,CAAC;AACN,CAAC;AACHtC,4BAA4B,CAACI,YAAY,EAACoB,gBAAgB,CAAC;AAC3D,OAAO,SAASe,OAAOA,CAACC,GAAG,EAAE;EACzB,OAAOpC,YAAY,CAACqC,GAAG,CAACD,GAAG,CAAC,CAACT,IAAI,CAAEZ,GAAG,IAAKA,GAAG,CAACc,IAAI,CAAC;AACxD;AAEA,eAAe7B,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}