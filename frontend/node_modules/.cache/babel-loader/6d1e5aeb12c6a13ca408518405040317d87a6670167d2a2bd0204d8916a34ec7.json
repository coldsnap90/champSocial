{"ast":null,"code":"var _s = $RefreshSig$();\nimport axios from \"axios\";\nimport axiosService from \"../helpers/axios\";\nimport { useNavigate } from \"react-router-dom\";\nfunction useUserActions() {\n  _s();\n  const navigate = useNavigate();\n  const baseURL = 'http://localhost:8000/api';\n  return {\n    login,\n    register,\n    logout\n  };\n  function login(data) {\n    return axios.post(`${baseURL}/auth/login/`, data).then(res => {\n      // Registering the account and tokens in the store\n      setUserData(res.data);\n      navigate(\"/\");\n    });\n  }\n\n  // Register the user\n  function register(data) {\n    return axios.post(`${baseURL}/auth/register/`, data).then(res => {\n      // Registering the account and tokens in the store\n      setUserData(res.data);\n      navigate(\"/\");\n    });\n  }\n\n  // Edit the user\n  function edit(data, userId) {\n    return axiosService.patch(`${baseURL}/user/${userId}/`, data, {\n      headers: {\n        \"content-type\": \"multipart/form-data\"\n      }\n    }).then(res => {\n      // Registering the account in the store\n      localStorage.setItem(\"auth\", JSON.stringify({\n        access: getAccessToken(),\n        refresh: getRefreshToken(),\n        user: res.data\n      }));\n    });\n  }\n\n  // Logout the user\n  function logout() {\n    return axiosService.post(`${baseURL}/auth/logout/`, {\n      refresh: getRefreshToken()\n    }).then(() => {\n      localStorage.removeItem(\"auth\");\n      navigate(\"/login\");\n    });\n  }\n}\n\n// Get the user\n_s(useUserActions, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\nfunction getUser() {\n  const auth = JSON.parse(localStorage.getItem(\"auth\")) || null;\n  if (auth) {\n    return auth.user;\n  } else {\n    return null;\n  }\n}\n\n// Get the access token\nfunction getAccessToken() {\n  const auth = JSON.parse(localStorage.getItem(\"auth\"));\n  return auth.access;\n}\n\n// Get the refresh token\nfunction getRefreshToken() {\n  const auth = JSON.parse(localStorage.getItem(\"auth\"));\n  return auth.refresh;\n}\n\n// Set the access, token and user property\nfunction setUserData(data) {\n  localStorage.setItem(\"auth\", JSON.stringify({\n    access: data.access,\n    refresh: data.refresh,\n    user: data.user\n  }));\n}\nexport { useUserActions, getUser, getAccessToken, getRefreshToken, setUserData };","map":{"version":3,"names":["axios","axiosService","useNavigate","useUserActions","_s","navigate","baseURL","login","register","logout","data","post","then","res","setUserData","edit","userId","patch","headers","localStorage","setItem","JSON","stringify","access","getAccessToken","refresh","getRefreshToken","user","removeItem","getUser","auth","parse","getItem"],"sources":["C:/Users/cfarb/scheduler/frontend/src/hooks/user.actions.js"],"sourcesContent":["import axios from \"axios\";\r\nimport axiosService from \"../helpers/axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction useUserActions() {\r\n    const navigate = useNavigate();\r\n    const baseURL = 'http://localhost:8000/api';\r\n    return {\r\n        login,\r\n        register,\r\n        logout,\r\n    };\r\n    function login(data) {\r\n        return axios.post(`${baseURL}/auth/login/`, data).then((res) => {\r\n          // Registering the account and tokens in the store\r\n          setUserData(res.data);\r\n          navigate(\"/\");\r\n        });\r\n      }\r\n    \r\n      // Register the user\r\n      function register(data) {\r\n        return axios.post(`${baseURL}/auth/register/`, data).then((res) => {\r\n          // Registering the account and tokens in the store\r\n          setUserData(res.data);\r\n          navigate(\"/\");\r\n        });\r\n      }\r\n    \r\n      // Edit the user\r\n      function edit(data, userId) {\r\n        return axiosService\r\n          .patch(`${baseURL}/user/${userId}/`, data, {\r\n            headers: {\r\n              \"content-type\": \"multipart/form-data\",\r\n            },\r\n          })\r\n          .then((res) => {\r\n            // Registering the account in the store\r\n            localStorage.setItem(\r\n              \"auth\",\r\n              JSON.stringify({\r\n                access: getAccessToken(),\r\n                refresh: getRefreshToken(),\r\n                user: res.data,\r\n              })\r\n            );\r\n          });\r\n      }\r\n    \r\n      // Logout the user\r\n      function logout() {\r\n        return axiosService\r\n          .post(`${baseURL}/auth/logout/`, { refresh: getRefreshToken() })\r\n          .then(() => {\r\n            localStorage.removeItem(\"auth\");\r\n            navigate(\"/login\");\r\n          });\r\n      }\r\n    }\r\n    \r\n    // Get the user\r\n    function getUser() {\r\n      const auth = JSON.parse(localStorage.getItem(\"auth\")) || null;\r\n      if (auth) {\r\n        return auth.user;\r\n      } else {\r\n        return null;\r\n      }\r\n    }\r\n    \r\n    // Get the access token\r\n    function getAccessToken() {\r\n      const auth = JSON.parse(localStorage.getItem(\"auth\"));\r\n      return auth.access;\r\n    }\r\n    \r\n    // Get the refresh token\r\n    function getRefreshToken() {\r\n      const auth = JSON.parse(localStorage.getItem(\"auth\"));\r\n      return auth.refresh;\r\n    }\r\n    \r\n    // Set the access, token and user property\r\n    function setUserData(data) {\r\n      localStorage.setItem(\r\n        \"auth\",\r\n        JSON.stringify({\r\n          access: data.access,\r\n          refresh: data.refresh,\r\n          user: data.user,\r\n        })\r\n      );\r\n    }\r\n    \r\n    export {\r\n      useUserActions,\r\n      getUser,\r\n      getAccessToken,\r\n      getRefreshToken,\r\n      setUserData,\r\n    };\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,kBAAkB;AAC3C,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAMC,QAAQ,GAAGH,WAAW,CAAC,CAAC;EAC9B,MAAMI,OAAO,GAAG,2BAA2B;EAC3C,OAAO;IACHC,KAAK;IACLC,QAAQ;IACRC;EACJ,CAAC;EACD,SAASF,KAAKA,CAACG,IAAI,EAAE;IACjB,OAAOV,KAAK,CAACW,IAAI,CAAE,GAAEL,OAAQ,cAAa,EAAEI,IAAI,CAAC,CAACE,IAAI,CAAEC,GAAG,IAAK;MAC9D;MACAC,WAAW,CAACD,GAAG,CAACH,IAAI,CAAC;MACrBL,QAAQ,CAAC,GAAG,CAAC;IACf,CAAC,CAAC;EACJ;;EAEA;EACA,SAASG,QAAQA,CAACE,IAAI,EAAE;IACtB,OAAOV,KAAK,CAACW,IAAI,CAAE,GAAEL,OAAQ,iBAAgB,EAAEI,IAAI,CAAC,CAACE,IAAI,CAAEC,GAAG,IAAK;MACjE;MACAC,WAAW,CAACD,GAAG,CAACH,IAAI,CAAC;MACrBL,QAAQ,CAAC,GAAG,CAAC;IACf,CAAC,CAAC;EACJ;;EAEA;EACA,SAASU,IAAIA,CAACL,IAAI,EAAEM,MAAM,EAAE;IAC1B,OAAOf,YAAY,CAChBgB,KAAK,CAAE,GAAEX,OAAQ,SAAQU,MAAO,GAAE,EAAEN,IAAI,EAAE;MACzCQ,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC,CACDN,IAAI,CAAEC,GAAG,IAAK;MACb;MACAM,YAAY,CAACC,OAAO,CAClB,MAAM,EACNC,IAAI,CAACC,SAAS,CAAC;QACbC,MAAM,EAAEC,cAAc,CAAC,CAAC;QACxBC,OAAO,EAAEC,eAAe,CAAC,CAAC;QAC1BC,IAAI,EAAEd,GAAG,CAACH;MACZ,CAAC,CACH,CAAC;IACH,CAAC,CAAC;EACN;;EAEA;EACA,SAASD,MAAMA,CAAA,EAAG;IAChB,OAAOR,YAAY,CAChBU,IAAI,CAAE,GAAEL,OAAQ,eAAc,EAAE;MAAEmB,OAAO,EAAEC,eAAe,CAAC;IAAE,CAAC,CAAC,CAC/Dd,IAAI,CAAC,MAAM;MACVO,YAAY,CAACS,UAAU,CAAC,MAAM,CAAC;MAC/BvB,QAAQ,CAAC,QAAQ,CAAC;IACpB,CAAC,CAAC;EACN;AACF;;AAEA;AAAAD,EAAA,CAzDKD,cAAc;EAAA,QACFD,WAAW;AAAA;AAyD5B,SAAS2B,OAAOA,CAAA,EAAG;EACjB,MAAMC,IAAI,GAAGT,IAAI,CAACU,KAAK,CAACZ,YAAY,CAACa,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,IAAI;EAC7D,IAAIF,IAAI,EAAE;IACR,OAAOA,IAAI,CAACH,IAAI;EAClB,CAAC,MAAM;IACL,OAAO,IAAI;EACb;AACF;;AAEA;AACA,SAASH,cAAcA,CAAA,EAAG;EACxB,MAAMM,IAAI,GAAGT,IAAI,CAACU,KAAK,CAACZ,YAAY,CAACa,OAAO,CAAC,MAAM,CAAC,CAAC;EACrD,OAAOF,IAAI,CAACP,MAAM;AACpB;;AAEA;AACA,SAASG,eAAeA,CAAA,EAAG;EACzB,MAAMI,IAAI,GAAGT,IAAI,CAACU,KAAK,CAACZ,YAAY,CAACa,OAAO,CAAC,MAAM,CAAC,CAAC;EACrD,OAAOF,IAAI,CAACL,OAAO;AACrB;;AAEA;AACA,SAASX,WAAWA,CAACJ,IAAI,EAAE;EACzBS,YAAY,CAACC,OAAO,CAClB,MAAM,EACNC,IAAI,CAACC,SAAS,CAAC;IACbC,MAAM,EAAEb,IAAI,CAACa,MAAM;IACnBE,OAAO,EAAEf,IAAI,CAACe,OAAO;IACrBE,IAAI,EAAEjB,IAAI,CAACiB;EACb,CAAC,CACH,CAAC;AACH;AAEA,SACExB,cAAc,EACd0B,OAAO,EACPL,cAAc,EACdE,eAAe,EACfZ,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}